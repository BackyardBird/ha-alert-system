title: Alert System
views:
  - title: Main
    cards:
      - type: vertical-stack
        cards:
          - type: markdown
            content: |
              # üö® Threshold Alert Management
              Create and manage automatic threshold alerts for your sensors.
          - type: entities
            title: üìä System Status
            show_header_toggle: false
            entities:
              - entity: input_boolean.threshold_alerts_enabled
                name: Enable Threshold Alerts
                icon: mdi:toggle-switch
              - entity: input_select.threshold_alert_channel
                name: Default Alert Channel
                icon: mdi:message-alert
              - entity: sensor.threshold_alert_status
                name: Status
                icon: mdi:shield-check
              - entity: sensor.threshold_alert_count
                name: Total Alerts Configured
                icon: mdi:counter
          - type: horizontal-stack
            cards:
              - show_name: true
                show_icon: true
                type: button
                tap_action:
                  action: call-service
                  service: script.list_threshold_alerts
                name: üìã List All
                icon: mdi:format-list-bulleted
              - type: button
                tap_action:
                  action: call-service
                  service: script.test_threshold_alert
                name: üß™ Test System
                icon: mdi:test-tube
              - type: button
                tap_action:
                  action: call-service
                  service: script.clear_all_threshold_alerts
                confirmation:
                  text: Are you sure you want to remove all threshold alerts?
                name: üóëÔ∏è Clear All
                icon: mdi:delete-sweep
          - type: entities
            title: ‚ûï Create Custom Alert
            show_header_toggle: false
            entities:
              - entity: input_text.temp_threshold_entity
                name: Entity ID
                icon: mdi:target
              - entity: input_text.temp_threshold_value
                name: Threshold Value
                icon: mdi:numeric
              - entity: input_select.temp_threshold_condition
                name: Condition
                icon: mdi:compare
              - entity: input_text.temp_threshold_message
                name: Custom Message (Optional)
                icon: mdi:message-text
          - show_name: true
            show_icon: true
            type: button
            tap_action:
              action: call-service
              service: script.create_threshold_alert_from_form
            name: ‚úÖ Create Alert
            icon: mdi:plus-circle
          - type: markdown
            title: üîç How to Find Entity IDs
            content: >
              **To find entity IDs for sensors:**

              1. **Developer Tools ‚Üí States** - Search for sensors

              2. **Settings ‚Üí Devices & Services ‚Üí Entities** - Browse all entities

              3. **Copy entity IDs** like `sensor.living_room_temperature`

              **Common sensor patterns:**

              - Temperature: `sensor.*temperature*`
              - Battery: `sensor.*battery*`
              - Humidity: `sensor.*humidity*`
              - Power: `sensor.*power*`

              **Examples:**

              - `sensor.bedroom_temperature`
              - `sensor.phone_battery_level`
              - `sensor.living_room_humidity`
          - type: entities
            title: ‚ûñ Remove Alert
            show_header_toggle: false
            entities:
              - entity: input_text.temp_remove_entity
                name: Entity ID to Remove
                icon: mdi:target
          - type: button
            tap_action:
              action: call-service
              service: script.remove_threshold_alert_from_form
            name: üóëÔ∏è Remove Alert
            icon: mdi:delete
          - type: markdown
            content: |
              ## üìñ How to Use This Card

              ### Creating Custom Alerts:
              1. **Find your entity ID** using Developer Tools ‚Üí States
              2. **Copy the entity_id** (like `sensor.living_room_temperature`)
              3. **Paste it** into the "Entity ID" field above
              4. **Set threshold** and condition (above/below)
              5. **Add custom message** (optional)
              6. **Click "Create Alert"**

              ### Managing Alerts:
              - **List All**: See current alerts and their status
              - **Remove**: Enter entity_id in remove section
              - **Clear All**: Remove all configured alerts (with confirmation)

              ### Tips:
              - Entity IDs look like: `sensor.bedroom_temperature`
              - You can set multiple thresholds for the same entity
              - Alerts use your configured channel (main/technical/both)
              - Test the system after adding new alerts

      - type: vertical-stack
        cards:
          - type: markdown
            content: >
              # üìò Binary Sensor Automation Generator

              Create Home Assistant automations for binary sensors with your alert
              system.
          - type: entities
            title: ‚öôÔ∏è Automation Builder
            show_header_toggle: false
            entities:
              - entity: input_text.binary_automation_entity
                name: üéØ Binary Sensor
                icon: mdi:target
              - entity: input_select.binary_automation_trigger_state
                name: üîÄ Trigger State
                icon: mdi:state-machine
              - entity: input_text.binary_automation_message
                name: üí¨ Alert Message
                icon: mdi:message-text
              - entity: input_select.binary_automation_level
                name: ‚ö†Ô∏è Alert Level
                icon: mdi:alert
              - entity: input_select.binary_automation_channel
                name: üì¢ Alert Channel
                icon: mdi:message-alert
              - entity: input_text.binary_automation_location
                name: üìç Location (Optional)
                icon: mdi:map-marker
          - type: horizontal-stack
            cards:
              - show_name: true
                show_icon: true
                type: button
                name: üîç Validate Form
                icon: mdi:check-circle
                tap_action:
                  action: call-service
                  service: script.validate_binary_automation_form
                  target: {}
              - type: button
                name: üîÑ Clear Form
                icon: mdi:refresh
                tap_action:
                  action: call-service
                  service: script.clear_binary_automation_form
          - type: markdown
            title: üìã Generated Automation YAML
            content: >+
              {% set alias = 'Binary Sensor Alert' %}

              {% set description = 'Alert when sensor changes' %}


              {% set entity = states('input_text.binary_automation_entity') | trim %}

              {% set to_state = states('input_select.binary_automation_trigger_state') |
              trim %}

              {% set message = states('input_text.binary_automation_message') | trim %}

              {% set level = states('input_select.binary_automation_level') | trim %}

              {% set channel = states('input_select.binary_automation_channel') | trim
              %}

              {% set location = states('input_text.binary_automation_location') | trim
              %}


              {% set location_block = '' if location == '' else '\n      location: "' ~
              location ~ '"' %}


              **Copy this YAML to create your automation:**


              ```yaml

              alias: "{{ alias }}"

              description: "{{ description }}"

              trigger:
                - platform: state
                  entity_id: {{ entity }}
                  to: "{{ to_state }}"
              condition: []

              action:
                - action: script.send_alert
                  data:
                    message: "{{ message }}"
                    level: "{{ level }}"
                    channel: "{{ channel }}"{{ location_block }}
              mode: single

              ```


              ---


              ### How to use

              1. **Fill in the form** above with your binary sensor details.

              2. **Click "üîç Validate Form"** to check for errors.

              3. **Copy the YAML code** above once validation passes.

              4. Go to **Settings ‚Üí Automations & Scenes**.

              5. Click **Create Automation** ‚Üí **Create new automation**.

              6. Click the **‚ãÆ** menu ‚Üí **Edit in YAML**.

              7. **Paste the YAML** and **Save** your automation.


              > üîç The YAML code updates automatically as you fill the form above.


              **Required fields**

              - Binary sensor **entity ID**

              - Alert **message**

          - type: markdown
            title: üîç How to Find Binary Sensor Entity IDs
            content: |
              **To find binary sensor entity IDs:**

              1. **Developer Tools ‚Üí States** 
              2. **Filter by domain**: `binary_sensor.`
              3. **Look for sensors** like:
                - `binary_sensor.front_door` (doors)
                - `binary_sensor.living_room_motion` (motion)
                - `binary_sensor.bedroom_window` (windows)  
                - `binary_sensor.smoke_detector` (safety)

              **Common patterns:**
              - Doors: `binary_sensor.*door*`
              - Motion: `binary_sensor.*motion*`
              - Windows: `binary_sensor.*window*`
              - Safety: `binary_sensor.*smoke*`, `binary_sensor.*gas*`
          - type: markdown
            content: |
              ## üìñ How to Use This Generator

              ### Quick Start:
              1. **Go to Developer Tools ‚Üí States**
              2. **Filter by "binary_sensor."** to find sensors
              3. **Copy entity ID** (like `binary_sensor.front_door`)
              4. **Paste into Binary Sensor** field
              5. **Configure settings** (trigger state, message, etc.)
              6. **Click "üîç Validate Form"** to check for errors
              7. **Copy & paste** the generated YAML into a new automation

              ### Settings Explained:
              - **Trigger State**: When to send the alert
                - **ON** = Active state (door opens, motion detected, etc.)  
                - **OFF** = Inactive state (door closes, motion stops, etc.)
                - **Device Offline** = Connection lost or device offline
              - **Alert Level**: info (blue ‚ÑπÔ∏è), warning (yellow ‚ö†Ô∏è), critical (red üö®)
              - **Channel**: Where to send the alert (main/technical/both)
              - **Location**: Optional room/area information

              ### State Meanings by Device Type:
              - **Doors/Windows**: ON=Opens, OFF=Closes
              - **Motion Sensors**: ON=Motion Detected, OFF=Motion Clear  
              - **Safety Sensors**: ON=Alert Triggered, OFF=Normal
              - **Covers**: ON=Opens, OFF=Closes

              ### Examples:
              - **Door Opens**: State=ON, Message="Front door opened"
              - **Motion Stops**: State=OFF, Message="Living room motion cleared"  
              - **Device Offline**: State=Device Offline, Message="Smoke detector offline!"